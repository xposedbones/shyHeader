// Generated by CoffeeScript 1.8.0
(function() {
  $.fn.shyHeader = function(options) {
    var currentOffset, defaults, downHandler, gotScrollPos, isHidden, lastScrollPos, lastScrollPosUp, reachedFooter, startingPos, upHandler;
    this.addClass("shyHeader");
    defaults = {
      distanceBeforeHide: 250,
      distanceBeforeShow: 50,
      elemToHide: this,
      visiblePos: 0,
      hiddenPos: -this.outerHeight(),
      duration: 0.3,
      visibleClass: "visible",
      hiddenClass: "hidden",
      useJS: true,
      destroy: false
    };
    options = $.extend(defaults, options);
    startingPos = options['elemToHide'].offset().top;
    currentOffset = $(window).scrollTop();
    lastScrollPos = 0;
    lastScrollPosUp = 0;
    gotScrollPos = false;
    isHidden = false;
    reachedFooter = false;
    if (!options['destroy']) {
      $(window).on("scroll", function(e) {
        var _end, _scrollTop;
        _scrollTop = $(window).scrollTop();
        _end = $("footer").offset().top - $("header").outerHeight();
        if (_scrollTop > _end) {
          reachedFooter = true;
          $('header').css({
            "position": 'absolute',
            "top": _end
          });
        } else {
          if (reachedFooter) {
            $('header').css({
              "position": 'fixed',
              "top": options['hiddenPos']
            });
            reachedFooter = false;
          }
          if (_scrollTop > lastScrollPos) {
            downHandler(_scrollTop, options['elemToHide']);
          } else {
            upHandler(_scrollTop, options['elemToHide']);
          }
        }
        return lastScrollPos = _scrollTop;
      });
      downHandler = function(_st, el) {
        if ((_st >= currentOffset + options['distanceBeforeHide']) && !isHidden) {
          if (options['useJS']) {
            TweenLite.to(options['elemToHide'], options['duration'], {
              top: options['hiddenPos'],
              ease: Quint.easeOut
            });
          }
          el.removeClass("shy-visible");
          el.addClass("shy-hidden");
          gotScrollPos = false;
          return isHidden = true;
        } else {

        }
      };
      return upHandler = function(_st, el) {
        if (!gotScrollPos) {
          gotScrollPos = true;
          lastScrollPosUp = _st;
        }
        if (_st <= lastScrollPosUp - options['distanceBeforeShow'] && isHidden) {
          if (options['useJS']) {
            TweenLite.to(options['elemToHide'], options['duration'], {
              top: options['visiblePos'],
              ease: Quint.easeOut
            });
          }
          isHidden = false;
          el.removeClass("shy-hidden");
          el.addClass("shy-visible");
        }
        return currentOffset = _st;
      };
    } else {
      this.removeClass("shyHeader");
      this.removeClass("shy-visible");
      this.removeClass("shy-hidden");
      return options['elemToHide'].css({
        "top": ""
      });
    }
  };

}).call(this);

